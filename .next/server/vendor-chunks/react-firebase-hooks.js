"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-firebase-hooks";
exports.ids = ["vendor-chunks/react-firebase-hooks"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-firebase-hooks/firestore/dist/index.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/react-firebase-hooks/firestore/dist/index.esm.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCollection: () => (/* binding */ useCollection),\n/* harmony export */   useCollectionData: () => (/* binding */ useCollectionData),\n/* harmony export */   useCollectionDataOnce: () => (/* binding */ useCollectionDataOnce),\n/* harmony export */   useCollectionOnce: () => (/* binding */ useCollectionOnce),\n/* harmony export */   useDocument: () => (/* binding */ useDocument),\n/* harmony export */   useDocumentData: () => (/* binding */ useDocumentData),\n/* harmony export */   useDocumentDataOnce: () => (/* binding */ useDocumentDataOnce),\n/* harmony export */   useDocumentOnce: () => (/* binding */ useDocumentOnce)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(ssr)/./node_modules/firebase/firestore/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar defaultState = function(defaultValue) {\n    return {\n        loading: defaultValue === undefined || defaultValue === null,\n        value: defaultValue\n    };\n};\nvar reducer = function() {\n    return function(state, action) {\n        switch(action.type){\n            case \"error\":\n                return __assign(__assign({}, state), {\n                    error: action.error,\n                    loading: false,\n                    value: undefined\n                });\n            case \"reset\":\n                return defaultState(action.defaultValue);\n            case \"value\":\n                return __assign(__assign({}, state), {\n                    error: undefined,\n                    loading: false,\n                    value: action.value\n                });\n            default:\n                return state;\n        }\n    };\n};\nvar useLoadingValue = function(getDefaultValue) {\n    var defaultValue = getDefaultValue ? getDefaultValue() : undefined;\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(reducer(), defaultState(defaultValue)), state = _a[0], dispatch = _a[1];\n    var reset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        var defaultValue = getDefaultValue ? getDefaultValue() : undefined;\n        dispatch({\n            type: \"reset\",\n            defaultValue: defaultValue\n        });\n    }, [\n        getDefaultValue\n    ]);\n    var setError = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(error) {\n        dispatch({\n            type: \"error\",\n            error: error\n        });\n    }, []);\n    var setValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(value) {\n        dispatch({\n            type: \"value\",\n            value: value\n        });\n    }, []);\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function() {\n        return {\n            error: state.error,\n            loading: state.loading,\n            reset: reset,\n            setError: setError,\n            setValue: setValue,\n            value: state.value\n        };\n    }, [\n        state.error,\n        state.loading,\n        reset,\n        setError,\n        setValue,\n        state.value\n    ]);\n};\nvar useComparatorRef = function(value, isEqual, onChange) {\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (!isEqual(value, ref.current)) {\n            ref.current = value;\n            if (onChange) {\n                onChange();\n            }\n        }\n    });\n    return ref;\n};\nvar useIsMounted = function() {\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true), isMounted = _a[0], setIsMounted = _a[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        return function() {\n            setIsMounted(false);\n        };\n    }, []);\n    return isMounted;\n};\nvar isRefEqual = function(v1, v2) {\n    var bothNull = !v1 && !v2;\n    var equal = !!v1 && !!v2 && (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.refEqual)(v1, v2);\n    return bothNull || equal;\n};\nvar useIsFirestoreRefEqual = function(value, onChange) {\n    return useComparatorRef(value, isRefEqual, onChange);\n};\nvar isQueryEqual = function(v1, v2) {\n    var bothNull = !v1 && !v2;\n    var equal = !!v1 && !!v2 && (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.queryEqual)(v1, v2);\n    return bothNull || equal;\n};\nvar useIsFirestoreQueryEqual = function(value, onChange) {\n    return useComparatorRef(value, isQueryEqual, onChange);\n};\nvar useCollection = function(query, options) {\n    var _a = useLoadingValue(), error = _a.error, loading = _a.loading, reset = _a.reset, setError = _a.setError, setValue = _a.setValue, value = _a.value;\n    var ref = useIsFirestoreQueryEqual(query, reset);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (!ref.current) {\n            setValue(undefined);\n            return;\n        }\n        var unsubscribe = (options === null || options === void 0 ? void 0 : options.snapshotListenOptions) ? (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)(ref.current, options.snapshotListenOptions, setValue, setError) : (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)(ref.current, setValue, setError);\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        ref.current\n    ]);\n    return [\n        value,\n        loading,\n        error\n    ];\n};\nvar useCollectionOnce = function(query, options) {\n    var _a = useLoadingValue(), error = _a.error, loading = _a.loading, reset = _a.reset, setError = _a.setError, setValue = _a.setValue, value = _a.value;\n    var isMounted = useIsMounted();\n    var ref = useIsFirestoreQueryEqual(query, reset);\n    var loadData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(query, options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            var get, result, error_1;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!query) {\n                            setValue(undefined);\n                            return [\n                                2 /*return*/ \n                            ];\n                        }\n                        get = getDocsFnFromGetOptions(options === null || options === void 0 ? void 0 : options.getOptions);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            get(query)\n                        ];\n                    case 2:\n                        result = _a.sent();\n                        if (isMounted) {\n                            setValue(result);\n                        }\n                        return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                    case 3:\n                        error_1 = _a.sent();\n                        if (isMounted) {\n                            setError(error_1);\n                        }\n                        return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    }, []);\n    var reloadData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return loadData(ref.current, options);\n    }, [\n        loadData,\n        ref.current\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        loadData(ref.current, options);\n    }, [\n        ref.current\n    ]);\n    return [\n        value,\n        loading,\n        error,\n        reloadData\n    ];\n};\nvar useCollectionData = function(query, options) {\n    var _a = useCollection(query, options), snapshots = _a[0], loading = _a[1], error = _a[2];\n    var values = getValuesFromSnapshots(snapshots, options === null || options === void 0 ? void 0 : options.snapshotOptions, options === null || options === void 0 ? void 0 : options.initialValue);\n    return [\n        values,\n        loading,\n        error,\n        snapshots\n    ];\n};\nvar useCollectionDataOnce = function(query, options) {\n    var _a = useCollectionOnce(query, options), snapshots = _a[0], loading = _a[1], error = _a[2], reloadData = _a[3];\n    var values = getValuesFromSnapshots(snapshots, options === null || options === void 0 ? void 0 : options.snapshotOptions, options === null || options === void 0 ? void 0 : options.initialValue);\n    return [\n        values,\n        loading,\n        error,\n        snapshots,\n        reloadData\n    ];\n};\nvar getValuesFromSnapshots = function(snapshots, options, initialValue) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function() {\n        var _a;\n        return (_a = snapshots === null || snapshots === void 0 ? void 0 : snapshots.docs.map(function(doc) {\n            return doc.data(options);\n        })) !== null && _a !== void 0 ? _a : initialValue;\n    }, [\n        snapshots,\n        options\n    ]);\n};\nvar getDocsFnFromGetOptions = function(_a) {\n    var _b = _a === void 0 ? {\n        source: \"default\"\n    } : _a, source = _b.source;\n    switch(source){\n        default:\n        case \"default\":\n            return firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs;\n        case \"cache\":\n            return firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocsFromCache;\n        case \"server\":\n            return firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocsFromServer;\n    }\n};\nvar useDocument = function(docRef, options) {\n    var _a = useLoadingValue(), error = _a.error, loading = _a.loading, reset = _a.reset, setError = _a.setError, setValue = _a.setValue, value = _a.value;\n    var ref = useIsFirestoreRefEqual(docRef, reset);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (!ref.current) {\n            setValue(undefined);\n            return;\n        }\n        var unsubscribe = (options === null || options === void 0 ? void 0 : options.snapshotListenOptions) ? (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)(ref.current, options.snapshotListenOptions, setValue, setError) : (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.onSnapshot)(ref.current, setValue, setError);\n        return function() {\n            unsubscribe();\n        };\n    }, [\n        ref.current\n    ]);\n    return [\n        value,\n        loading,\n        error\n    ];\n};\nvar useDocumentOnce = function(docRef, options) {\n    var _a = useLoadingValue(), error = _a.error, loading = _a.loading, reset = _a.reset, setError = _a.setError, setValue = _a.setValue, value = _a.value;\n    var isMounted = useIsMounted();\n    var ref = useIsFirestoreRefEqual(docRef, reset);\n    var loadData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function(reference, options) {\n        return __awaiter(void 0, void 0, void 0, function() {\n            var get, result, error_1;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!reference) {\n                            setValue(undefined);\n                            return [\n                                2 /*return*/ \n                            ];\n                        }\n                        get = getDocFnFromGetOptions(options === null || options === void 0 ? void 0 : options.getOptions);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            get(reference)\n                        ];\n                    case 2:\n                        result = _a.sent();\n                        if (isMounted) {\n                            setValue(result);\n                        }\n                        return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                    case 3:\n                        error_1 = _a.sent();\n                        if (isMounted) {\n                            setError(error_1);\n                        }\n                        return [\n                            3 /*break*/ ,\n                            4\n                        ];\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    }, []);\n    var reloadData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        return loadData(ref.current, options);\n    }, [\n        loadData,\n        ref.current\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (!ref.current) {\n            setValue(undefined);\n            return;\n        }\n        loadData(ref.current, options);\n    }, [\n        ref.current\n    ]);\n    return [\n        value,\n        loading,\n        error,\n        reloadData\n    ];\n};\nvar useDocumentData = function(docRef, options) {\n    var _a = useDocument(docRef, options), snapshot = _a[0], loading = _a[1], error = _a[2];\n    var value = getValueFromSnapshot(snapshot, options === null || options === void 0 ? void 0 : options.snapshotOptions, options === null || options === void 0 ? void 0 : options.initialValue);\n    return [\n        value,\n        loading,\n        error,\n        snapshot\n    ];\n};\nvar useDocumentDataOnce = function(docRef, options) {\n    var _a = useDocumentOnce(docRef, options), snapshot = _a[0], loading = _a[1], error = _a[2], reloadData = _a[3];\n    var value = getValueFromSnapshot(snapshot, options === null || options === void 0 ? void 0 : options.snapshotOptions, options === null || options === void 0 ? void 0 : options.initialValue);\n    return [\n        value,\n        loading,\n        error,\n        snapshot,\n        reloadData\n    ];\n};\nvar getDocFnFromGetOptions = function(_a) {\n    var _b = _a === void 0 ? {\n        source: \"default\"\n    } : _a, source = _b.source;\n    switch(source){\n        default:\n        case \"default\":\n            return firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc;\n        case \"cache\":\n            return firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocFromCache;\n        case \"server\":\n            return firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocFromServer;\n    }\n};\nvar getValueFromSnapshot = function(snapshot, options, initialValue) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(function() {\n        var _a;\n        return (_a = snapshot === null || snapshot === void 0 ? void 0 : snapshot.data(options)) !== null && _a !== void 0 ? _a : initialValue;\n    }, [\n        snapshot,\n        options,\n        initialValue\n    ]);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-firebase-hooks/firestore/dist/index.esm.js\n");

/***/ })

};
;